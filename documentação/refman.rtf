{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Sistema SIGA  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Sistema SIGA}
{\comment Gerado por doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Sistema SIGA}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Aluno} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Materia} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Professor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Sistema} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Turma} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b Faculdade/PDS II/codespaces/codespaces/{\b aluno.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b aluno.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b materia.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b materia.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b professor.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b professor.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b sistema.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b sistema.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b turma.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Faculdade/PDS II/codespaces/codespaces/{\b turma.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Aluno\par \pard\plain 
{\tc\tcl2 \v Aluno}
{\xe \v Aluno}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
{
{\f2 #include <aluno.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aluno} (const std::string &nome, const std::string &sobrenome, const std::string &email, int idade, char sexo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cadastrar} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b matricular} (const std::string &codigoMateria, const std::string &codigoTurma)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b acessarNotasEFrequencias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getNome} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getSobrenome} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getEmail} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getIdade} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b getSexo} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getLogin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getSenha} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarLoginSenha} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realizarLogin} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< std::string > & {\b getTurmasMatriculadas} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verificarCredenciais} (const std::string &login, const std::string &senha) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Aluno\:Aluno}
{\xe \v Aluno\:Aluno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Aluno::Aluno (const std::string &  {\i nome}, const std::string &  {\i sobrenome}, const std::string &  {\i email}, int  {\i idade}, char  {\i sexo})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9     : nome(nome), sobrenome(sobrenome), email(email), idade(idade), sexo(sexo) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v acessarNotasEFrequencias\:Aluno}
{\xe \v Aluno\:acessarNotasEFrequencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Aluno::acessarNotasEFrequencias () const}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76                                            \{\par
77     std::cout << {\cf22 "Notas e frequencias do aluno "} << nome << {\cf22 " "} << sobrenome << {\cf22 ":\\n"};\par
78     {\cf19 for} ({\cf17 const} {\cf17 auto}& turma : turmasMatriculadas) \{\par
79         std::string nomeArquivo = {\cf22 "notas_"} + turma + {\cf22 ".txt"};\par
80         std::ifstream arquivo(nomeArquivo);\par
81 \par
82         {\cf19 if} (arquivo.is_open()) \{\par
83             std::string linha;\par
84             {\cf19 while} (std::getline(arquivo, linha)) \{\par
85                 std::cout << linha << {\cf22 "\\n"};\par
86             \}\par
87             arquivo.close();\par
88         \} {\cf19 else} \{\par
89             std::cout << {\cf22 "Erro: Arquivo de notas nao encontrado para a turma "} << turma << {\cf22 "\\n"};\par
90         \}\par
91     \}\par
92 \}\par
}
}
{\xe \v cadastrar\:Aluno}
{\xe \v Aluno\:cadastrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Aluno::cadastrar (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                                     \{\par
53     {\cf20 // Apenas permite o cadastro uma vez}\par
54     {\cf19 if} (this->login.empty() && this->senha.empty()) \{\par
55         this->login = login;\par
56         this->senha = senha;\par
57         std::cout << {\cf22 "Cadastro realizado com sucesso!\\n"};\par
58     \} {\cf19 else} \{\par
59         std::cout << {\cf22 "Erro: O aluno ja esta cadastrado.\\n"};\par
60     \}\par
61 \}\par
}
}
{\xe \v criarLoginSenha\:Aluno}
{\xe \v Aluno\:criarLoginSenha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Aluno::criarLoginSenha (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                                                   \{\par
40     login = novoLogin;\par
41     senha = novaSenha;\par
42 \}\par
}
}
{\xe \v getEmail\:Aluno}
{\xe \v Aluno\:getEmail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Aluno::getEmail () const}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                 \{\par
20     {\cf19 return} email;\par
21 \}\par
}
}
{\xe \v getIdade\:Aluno}
{\xe \v Aluno\:getIdade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aluno::getIdade () const}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                           \{\par
24     {\cf19 return} idade;\par
25 \}\par
}
}
{\xe \v getLogin\:Aluno}
{\xe \v Aluno\:getLogin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Aluno::getLogin () const}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                 \{\par
32     {\cf19 return} login;\par
33 \}\par
}
}
{\xe \v getNome\:Aluno}
{\xe \v Aluno\:getNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Aluno::getNome () const}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                \{\par
12     {\cf19 return} nome;\par
13 \}\par
}
}
{\xe \v getSenha\:Aluno}
{\xe \v Aluno\:getSenha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Aluno::getSenha () const}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                 \{\par
36     {\cf19 return} senha;\par
37 \}\par
}
}
{\xe \v getSexo\:Aluno}
{\xe \v Aluno\:getSexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Aluno::getSexo () const}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                          \{\par
28     {\cf19 return} sexo;\par
29 \}\par
}
}
{\xe \v getSobrenome\:Aluno}
{\xe \v Aluno\:getSobrenome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Aluno::getSobrenome () const}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                     \{\par
16     {\cf19 return} sobrenome;\par
17 \}\par
}
}
{\xe \v getTurmasMatriculadas\:Aluno}
{\xe \v Aluno\:getTurmasMatriculadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< std::string > & Aluno::getTurmasMatriculadas () const}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                                                \{\par
64     {\cf19 return} turmasMatriculadas;\par
65 \}\par
}
}
{\xe \v matricular\:Aluno}
{\xe \v Aluno\:matricular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Aluno::matricular (const std::string &  {\i codigoMateria}, const std::string &  {\i codigoTurma})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                                                                    \{\par
68     {\cf19 if} (turmasMatriculadas.size() < 5) \{ {\cf20 // Limite de 5 matr\'EDculas}\par
69         turmasMatriculadas.push_back(codigoTurma);\par
70         std::cout << {\cf22 "Matricula realizada com sucesso na turma "} << codigoTurma << {\cf22 "\\n"};\par
71     \} {\cf19 else} \{\par
72         std::cout << {\cf22 "Erro: Limite de matriculas atingido.\\n"};\par
73     \}\par
74 \}\par
}
}
{\xe \v realizarLogin\:Aluno}
{\xe \v Aluno\:realizarLogin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Aluno::realizarLogin (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                                                           \{\par
45     {\cf19 return} (tentativaLogin == login && tentativaSenha == senha);\par
46 \}\par
}
}
{\xe \v verificarCredenciais\:Aluno}
{\xe \v Aluno\:verificarCredenciais}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Aluno::verificarCredenciais (const std::string &  {\i login}, const std::string &  {\i senha}) const}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48                                                                                      \{\par
49     {\cf19 return} this->login == login && this->senha == senha;\par
50 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b aluno.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b aluno.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Materia\par \pard\plain 
{\tc\tcl2 \v Materia}
{\xe \v Materia}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
{\f2 #include <materia.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Materia} (const std::string &nome, const std::string &codigoMateria, const std::string &departamento)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cadastrarProfessor} ({\b Professor} *professor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b excluirProfessor} ({\b Professor} *professor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getNome} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getCodigoMateria} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getDepartamento} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< {\b Professor} * > & {\b getProfessoresCadastrados} () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Materia\:Materia}
{\xe \v Materia\:Materia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Materia::Materia (const std::string &  {\i nome}, const std::string &  {\i codigoMateria}, const std::string &  {\i departamento})}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10     : nome(nome), codigoMateria(codigoMateria), departamento(departamento) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v cadastrarProfessor\:Materia}
{\xe \v Materia\:cadastrarProfessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Materia::cadastrarProfessor ({\b Professor} *  {\i professor})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                                      \{\par
29     {\cf20 // Verifica se o professor j\'E1 est\'E1 cadastrado}\par
30     {\cf17 auto} it = std::find(professoresCadastrados.begin(), professoresCadastrados.end(), professor);\par
31     {\cf19 if} (it == professoresCadastrados.end()) \{ \par
32         professoresCadastrados.push_back(professor);\par
33         std::cout << {\cf22 "Professor cadastrado com sucesso na materia "} << codigoMateria << {\cf22 "\\n"};\par
34     \} {\cf19 else} \{\par
35         std::cout << {\cf22 "Erro: Professor ja cadastrado nesta materia.\\n"};\par
36     \}\par
37 \}\par
}
}
{\xe \v excluirProfessor\:Materia}
{\xe \v Materia\:excluirProfessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Materia::excluirProfessor ({\b Professor} *  {\i professor})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                    \{\par
40     {\cf20 // Remove o professor da lista de cadastrados}\par
41     {\cf17 auto} it = std::find(professoresCadastrados.begin(), professoresCadastrados.end(), professor);\par
42     {\cf19 if} (it != professoresCadastrados.end()) \{\par
43         professoresCadastrados.erase(it);\par
44         std::cout << {\cf22 "Professor removido com sucesso da materia "} << codigoMateria << {\cf22 "\\n"};\par
45     \} {\cf19 else} \{\par
46         std::cout << {\cf22 "Erro: Professor nao encontrado nesta materia.\\n"};\par
47     \}\par
48 \}\par
}
}
{\xe \v getCodigoMateria\:Materia}
{\xe \v Materia\:getCodigoMateria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & Materia::getCodigoMateria () const}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                                  \{\par
17     {\cf19 return} codigoMateria;\par
18 \}\par
}
}
{\xe \v getDepartamento\:Materia}
{\xe \v Materia\:getDepartamento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & Materia::getDepartamento () const}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20                                                 \{\par
21     {\cf19 return} departamento;\par
22 \}\par
}
}
{\xe \v getNome\:Materia}
{\xe \v Materia\:getNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & Materia::getNome () const}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                         \{\par
13     {\cf19 return} nome;\par
14 \}\par
}
}
{\xe \v getProfessoresCadastrados\:Materia}
{\xe \v Materia\:getProfessoresCadastrados}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< {\b Professor} * > & Materia::getProfessoresCadastrados () const}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                                       \{\par
25     {\cf19 return} professoresCadastrados;\par
26 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b materia.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b materia.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Professor\par \pard\plain 
{\tc\tcl2 \v Professor}
{\xe \v Professor}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
{\f2 #include <professor.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Professor} (const std::string &nome, const std::string &sobrenome, const std::string &areaAtuacao, int idade, char sexo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cadastrar} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b matricular} (const std::string &codigoMateria, const std::string &codigoTurma)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b temTurmaAssociada} (const std::string &codigoMateria) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registrarNotasEFrequencias} (const std::string &codigoTurma, const std::vector< std::string > &alunos, const std::vector< int > &notas, const std::vector< int > &frequencias)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b acessarNotasEFrequencias} (const std::string &codigoTurma) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b verificarCredenciais} (const std::string &login, const std::string &senha) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getNome} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getSobrenome} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getIdade} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b getSexo} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getAreaAtuacao} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getLogin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getSenha} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< std::string > & {\b getTurmasAssociadas} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarLoginSenha} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realizarLogin} (const std::string &login, const std::string &senha)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Professor\:Professor}
{\xe \v Professor\:Professor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Professor::Professor (const std::string &  {\i nome}, const std::string &  {\i sobrenome}, const std::string &  {\i areaAtuacao}, int  {\i idade}, char  {\i sexo})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13     : nome(nome), sobrenome(sobrenome), areaAtuacao(areaAtuacao), idade(idade), sexo(sexo) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v acessarNotasEFrequencias\:Professor}
{\xe \v Professor\:acessarNotasEFrequencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Professor::acessarNotasEFrequencias (const std::string &  {\i codigoTurma}) const}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                                                            \{\par
98     std::cout << {\cf22 "Notas e frequencias da turma "} << codigoTurma << {\cf22 " ministrada pelo professor "} << nome << {\cf22 " "} << sobrenome << {\cf22 ":\\n"};\par
99     std::string nomeArquivo = {\cf22 "notas_"} + codigoTurma + {\cf22 ".txt"};\par
100     std::ifstream arquivo(nomeArquivo);\par
101 \par
102     {\cf19 if} (arquivo.is_open()) \{\par
103         std::string linha;\par
104         {\cf19 while} (std::getline(arquivo, linha)) \{\par
105             std::cout << linha << {\cf22 "\\n"};\par
106         \}\par
107         arquivo.close();\par
108     \} {\cf19 else} \{\par
109         std::cout << {\cf22 "Erro: Arquivo de notas nao encontrado para a turma "} << codigoTurma << {\cf22 "\\n"};\par
110     \}\par
111 \}\par
}
}
{\xe \v cadastrar\:Professor}
{\xe \v Professor\:cadastrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Professor::cadastrar (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48                                                                         \{\par
49     {\cf20 // Apenas permite o cadastro uma vez}\par
50     {\cf19 if} (this->login.empty() && this->senha.empty()) \{\par
51         this->login = login;\par
52         this->senha = senha;\par
53         std::cout << {\cf22 "Cadastro realizado com sucesso!\\n"};\par
54     \} {\cf19 else} \{\par
55         std::cout << {\cf22 "Erro: O professor ja esta cadastrado.\\n"};\par
56     \}\par
57 \}\par
}
}
{\xe \v criarLoginSenha\:Professor}
{\xe \v Professor\:criarLoginSenha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Professor::criarLoginSenha (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                                                                       \{\par
44     login = novoLogin;\par
45     senha = novaSenha;\par
46 \}\par
}
}
{\xe \v getAreaAtuacao\:Professor}
{\xe \v Professor\:getAreaAtuacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Professor::getAreaAtuacao () const}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                           \{\par
32     {\cf19 return} areaAtuacao;\par
33 \}\par
}
}
{\xe \v getIdade\:Professor}
{\xe \v Professor\:getIdade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Professor::getIdade () const}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23                               \{\par
24     {\cf19 return} idade;\par
25 \}\par
}
}
{\xe \v getLogin\:Professor}
{\xe \v Professor\:getLogin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Professor::getLogin () const}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35                                     \{\par
36     {\cf19 return} login;\par
37 \}\par
}
}
{\xe \v getNome\:Professor}
{\xe \v Professor\:getNome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Professor::getNome () const}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                    \{\par
16     {\cf19 return} nome;\par
17 \}\par
}
}
{\xe \v getSenha\:Professor}
{\xe \v Professor\:getSenha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Professor::getSenha () const}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                     \{\par
40     {\cf19 return} senha;\par
41 \}\par
}
}
{\xe \v getSexo\:Professor}
{\xe \v Professor\:getSexo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Professor::getSexo () const}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                               \{\par
28     {\cf19 return} sexo;\par
29 \}\par
}
}
{\xe \v getSobrenome\:Professor}
{\xe \v Professor\:getSobrenome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Professor::getSobrenome () const}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                         \{\par
20     {\cf19 return} sobrenome;\par
21 \}\par
}
}
{\xe \v getTurmasAssociadas\:Professor}
{\xe \v Professor\:getTurmasAssociadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< std::string > & Professor::getTurmasAssociadas () const}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 78                                                                  \{\par
79     {\cf19 return} turmasMatriculadas;\par
80 \}\par
}
}
{\xe \v matricular\:Professor}
{\xe \v Professor\:matricular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Professor::matricular (const std::string &  {\i codigoMateria}, const std::string &  {\i codigoTurma})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67                                                                                       \{\par
68     {\cf19 if} (turmasMatriculadas.size() < 2) \{ {\cf20 // Limite de 2 matr\'EDculas}\par
69         turmasMatriculadas.push_back(codigoMateria);\par
70         {\cf19 for} (std::string i : turmasMatriculadas) \{\par
71         std::cout << i << {\cf22 " "};    \}\par
72         std::cout << {\cf22 "Matricula realizada com sucesso na materia "} << codigoMateria << {\cf22 "\\n"};\par
73     \} {\cf19 else} \{\par
74         std::cout << {\cf22 "Erro: Limite de materias atingido.\\n"};\par
75     \}\par
76 \}\par
}
}
{\xe \v realizarLogin\:Professor}
{\xe \v Professor\:realizarLogin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Professor::realizarLogin (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59                                                                                               \{\par
60     {\cf19 return} (tentativaLogin == login && tentativaSenha == senha);\par
61 \}\par
}
}
{\xe \v registrarNotasEFrequencias\:Professor}
{\xe \v Professor\:registrarNotasEFrequencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Professor::registrarNotasEFrequencias (const std::string &  {\i codigoTurma}, const std::vector< std::string > &  {\i alunos}, const std::vector< int > &  {\i notas}, const std::vector< int > &  {\i frequencias})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                                                                                                                                                            \{\par
83     std::string nomeArquivo = {\cf22 "notas_"} + codigoTurma + {\cf22 ".txt"};\par
84     std::ofstream arquivo(nomeArquivo, std::ios::app);\par
85 \par
86     {\cf19 if} (arquivo.is_open()) \{\par
87         {\cf19 for} ({\cf18 size_t} i = 0; i < alunos.size(); ++i) \{\par
88             arquivo << alunos[i] << {\cf22 "Notas e frequencias do aluno na mat\'E9ria "} << codigoTurma << {\cf22 "\\n"} << notas[i] << {\cf22 "\\n"} << frequencias[i] << {\cf22 "\\n"};\par
89         \}\par
90         arquivo.close();\par
91         std::cout << {\cf22 "Notas e frequencias registradas com sucesso para a turma "} << codigoTurma << {\cf22 "\\n"};\par
92     \} {\cf19 else} \{\par
93         std::cout << {\cf22 "Erro: Impossivel abrir o arquivo de notas para a turma "} << codigoTurma << {\cf22 "\\n"};\par
94     \}\par
95 \}\par
}
}
{\xe \v temTurmaAssociada\:Professor}
{\xe \v Professor\:temTurmaAssociada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Professor::temTurmaAssociada (const std::string &  {\i codigoMateria}) const}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 113                                                                       \{\par
114     {\cf20 // Itera sobre as turmas associadas ao professor}\par
115     {\cf19 for} ({\cf17 auto} it = turmasMatriculadas.begin(); it != turmasMatriculadas.end(); ++it) \{\par
116         {\cf20 // Verifica se a turma tem o mesmo c\'F3digo de mat\'E9ria}\par
117         {\cf19 if} (0 < turmasMatriculadas.size() <= 2) \{\par
118             {\cf19 return} {\cf17 true}; {\cf20 // Turma associada encontrada}\par
119         \}\par
120     \}\par
121     {\cf19 return} {\cf17 false}; {\cf20 // Nenhuma turma associada encontrada}\par
122 \}\par
}
}
{\xe \v verificarCredenciais\:Professor}
{\xe \v Professor\:verificarCredenciais}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Professor::verificarCredenciais (const std::string &  {\i login}, const std::string &  {\i senha}) const}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                                                                          \{\par
64     {\cf19 return} (this->login == login && this->senha == senha);\par
65 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b professor.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b professor.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Sistema\par \pard\plain 
{\tc\tcl2 \v Sistema}
{\xe \v Sistema}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\f2 #include <sistema.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loginAluno} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loginProfessor} (const std::string &login, const std::string &senha)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarMateria} (const std::string &nome, const std::string &codigoMateria, const std::string &departamento)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b excluirMateria} (const std::string &codigo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listarMaterias} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< {\b Materia} * > & {\b getMateriasCadastradas} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b criarTurma} (const std::string &codigo, const std::string &codigoTurma, {\b Professor} *professor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b excluirTurma} (const std::string &codigoTurma)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listarTurmas} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< {\b Turma} * > & {\b getTurmasCadastradas} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b acessarNotasEFrequenciasAluno} ({\b Aluno} *aluno) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b acessarTurmasProfessor} ({\b Professor} *professor) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b acessarNotasETurmasProfessor} ({\b Professor} *professor) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b professorTemTurmas} ({\b Professor} *professor) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v acessarNotasEFrequenciasAluno\:Sistema}
{\xe \v Sistema\:acessarNotasEFrequenciasAluno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::acessarNotasEFrequenciasAluno ({\b Aluno} *  {\i aluno}) const}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                               \{\par
108     std::cout << {\cf22 "Notas e frequencias do aluno "} << aluno->getNome() << {\cf22 " "} << aluno->getSobrenome() << {\cf22 ":\\n"};\par
109     aluno->acessarNotasEFrequencias();\par
110 \}\par
}
}
{\xe \v acessarNotasETurmasProfessor\:Sistema}
{\xe \v Sistema\:acessarNotasETurmasProfessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::acessarNotasETurmasProfessor ({\b Professor} *  {\i professor}) const}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 120                                                                      \{\par
121     {\cf20 // Verifica se o professor \'E9 nulo (pode adicionar mais verifica\'E7\'F5es conforme necess\'E1rio)}\par
122     {\cf19 if} (professor == {\cf17 nullptr}) \{\par
123         std::cout << {\cf22 "Erro: Professor inv\'E1lido.\\n"};\par
124         {\cf19 return};\par
125     \}\par
126 \par
127     {\cf20 // Obt\'E9m as turmas associadas ao professor}\par
128     {\cf17 const} std::vector<std::string>& turmasAssociadas = professor->getTurmasAssociadas();\par
129 \par
130     {\cf20 // Verifica se o professor tem turmas associadas}\par
131     {\cf19 if} (turmasAssociadas.empty()) \{\par
132         std::cout << {\cf22 "O professor n\'E3o tem turmas associadas.\\n"};\par
133         {\cf19 return};\par
134     \}\par
135 \par
136     {\cf20 // Itera sobre as turmas associadas e exibe informa\'E7\'F5es}\par
137     {\cf19 for} ({\cf17 const} std::string& codigoTurma : turmasAssociadas) \{\par
138         std::cout << {\cf22 "Turma: "} << codigoTurma << {\cf22 "\\n"};\par
139     \}\par
140 \}\par
}
}
{\xe \v acessarTurmasProfessor\:Sistema}
{\xe \v Sistema\:acessarTurmasProfessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::acessarTurmasProfessor ({\b Professor} *  {\i professor}) const}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112                                                                \{\par
113     {\cf19 if} (professorTemTurmas(professor)) \{\par
114         std::cout << {\cf22 "Turmas do professor "} << professor->getNome() << {\cf22 " "} << professor->getSobrenome() << {\cf22 ":\\n"};\par
115     \} {\cf19 else} \{\par
116         std::cout << {\cf22 "Nao ha turmas cadastradas para voce dar aula neste semestre.\\n"};\par
117     \}\par
118 \}\par
}
}
{\xe \v criarMateria\:Sistema}
{\xe \v Sistema\:criarMateria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::criarMateria (const std::string &  {\i nome}, const std::string &  {\i codigoMateria}, const std::string &  {\i departamento})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                                                                                                                \{\par
46     materiasCadastradas.push_back({\cf17 new} Materia(nome, codigoMateria, departamento));\par
47     std::cout << {\cf22 "Materia criada com sucesso.\\n"};\par
48 \}\par
}
}
{\xe \v criarTurma\:Sistema}
{\xe \v Sistema\:criarTurma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::criarTurma (const std::string &  {\i codigo}, const std::string &  {\i codigoTurma}, {\b Professor} *  {\i professor})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70                                                                                                            \{\par
71     {\cf17 auto} it = std::find_if(materiasCadastradas.begin(), materiasCadastradas.end(),\par
72                            [codigoMateria]({\cf17 const} Materia* materia) \{ return materia->getCodigoMateria() == codigoMateria; \});\par
73 \par
74     {\cf19 if} (it != materiasCadastradas.end()) \{\par
75         {\cf19 if} (!professor->temTurmaAssociada(codigoMateria)) \{\par
76             turmasCadastradas.push_back({\cf17 new} Turma(codigoMateria, codigoTurma, professor));\par
77             std::cout << {\cf22 "Turma criada com sucesso.\\n"};\par
78         \} {\cf19 else} \{\par
79             std::cout << {\cf22 "Erro: Professor ja tem turma cadastrada para esta materia.\\n"};\par
80         \}\par
81     \} {\cf19 else} \{\par
82         std::cout << {\cf22 "Erro: Materia nao encontrada.\\n"};\par
83     \}\par
84 \}\par
}
}
{\xe \v excluirMateria\:Sistema}
{\xe \v Sistema\:excluirMateria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::excluirMateria (const std::string &  {\i codigo})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 50                                                     \{\par
51     {\cf17 auto} it = std::find_if(materiasCadastradas.begin(), materiasCadastradas.end(),\par
52                            [codigo]({\cf17 const} Materia* materia) \{ return materia->getCodigoMateria() == codigo; \});\par
53 \par
54     {\cf19 if} (it != materiasCadastradas.end()) \{\par
55         {\cf17 delete} *it;\par
56         materiasCadastradas.erase(it);\par
57         std::cout << {\cf22 "Materia excluida com sucesso.\\n"};\par
58     \} {\cf19 else} \{\par
59         std::cout << {\cf22 "Erro: Materia nao encontrada.\\n"};\par
60     \}\par
61 \}\par
}
}
{\xe \v excluirTurma\:Sistema}
{\xe \v Sistema\:excluirTurma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::excluirTurma (const std::string &  {\i codigoTurma})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 87                                                        \{\par
88     {\cf17 auto} it = std::find_if(turmasCadastradas.begin(), turmasCadastradas.end(),\par
89                            [codigoTurma]({\cf17 const} Turma* turma) \{ return turma->getCodigoMateria() == codigoTurma; \});\par
90 \par
91     {\cf19 if} (it != turmasCadastradas.end()) \{\par
92         {\cf17 delete} *it;\par
93         turmasCadastradas.erase(it);\par
94         std::cout << {\cf22 "Turma excluida com sucesso.\\n"};\par
95     \} {\cf19 else} \{\par
96         std::cout << {\cf22 "Erro: Turma nao encontrada.\\n"};\par
97     \}\par
98 \}\par
}
}
{\xe \v getMateriasCadastradas\:Sistema}
{\xe \v Sistema\:getMateriasCadastradas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< {\b Materia} * > & Sistema::getMateriasCadastradas () const}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                                  \{\par
38     {\cf19 return} materiasCadastradas;\par
39 \}\par
}
}
{\xe \v getTurmasCadastradas\:Sistema}
{\xe \v Sistema\:getTurmasCadastradas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< {\b Turma} * > & Sistema::getTurmasCadastradas () const}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                              \{\par
42     {\cf19 return} turmasCadastradas;\par
43 \}\par
}
}
{\xe \v listarMaterias\:Sistema}
{\xe \v Sistema\:listarMaterias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::listarMaterias () const}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 63                                    \{\par
64     std::cout << {\cf22 "Materias cadastradas:\\n"};\par
65     {\cf19 for} ({\cf17 const} {\cf17 auto}& materia : materiasCadastradas) \{\par
66         std::cout << {\cf22 " - "} << materia->getNome() << {\cf22 " ("} << materia->getCodigoMateria() << {\cf22 ")\\n"};\par
67     \}\par
68 \}\par
}
}
{\xe \v listarTurmas\:Sistema}
{\xe \v Sistema\:listarTurmas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::listarTurmas () const}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 100                                  \{\par
101     std::cout << {\cf22 "Turmas cadastradas:\\n"};\par
102     {\cf19 for} ({\cf17 const} {\cf17 auto}& turma : turmasCadastradas) \{\par
103         std::cout << {\cf22 " - "} << turma->getCodigoMateria() << {\cf22 " ("} << turma->getCodigoTurma() << {\cf22 ")\\n"};\par
104     \}\par
105 \}\par
}
}
{\xe \v loginAluno\:Sistema}
{\xe \v Sistema\:loginAluno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::loginAluno (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12                                                                        \{\par
13     {\cf19 for} ({\cf17 const} {\cf17 auto}& aluno : alunosCadastrados) \{\par
14         {\cf19 if} (aluno->verificarCredenciais(login, senha)) \{\par
15             std::cout << {\cf22 "Login de aluno realizado com sucesso.\\n"};\par
16             acessarNotasEFrequenciasAluno(aluno);\par
17             {\cf19 return};\par
18         \}\par
19     \}\par
20 \par
21     std::cout << {\cf22 "Erro: Credenciais invalidas para aluno.\\n"};\par
22 \}\par
}
}
{\xe \v loginProfessor\:Sistema}
{\xe \v Sistema\:loginProfessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sistema::loginProfessor (const std::string &  {\i login}, const std::string &  {\i senha})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                                            \{\par
26     {\cf19 for} ({\cf17 const} {\cf17 auto}& professor : professoresCadastrados) \{\par
27         {\cf19 if} (professor->verificarCredenciais(login, senha)) \{\par
28             std::cout << {\cf22 "Login de professor realizado com sucesso.\\n"};\par
29             acessarTurmasProfessor(professor);\par
30             {\cf19 return};\par
31         \}\par
32     \}\par
33 \par
34     std::cout << {\cf22 "Erro: Credenciais invalidas para professor.\\n"};\par
35 \}\par
}
}
{\xe \v professorTemTurmas\:Sistema}
{\xe \v Sistema\:professorTemTurmas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Sistema::professorTemTurmas ({\b Professor} *  {\i professor}) const}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 142                                                            \{\par
143     {\cf19 for} ({\cf17 const} {\cf17 auto}& turma : turmasCadastradas) \{\par
144         {\cf19 if} (turma->getProfessor() == professor) \{\par
145             {\cf19 return} {\cf17 true};\par
146         \}\par
147     \}\par
148 \par
149     {\cf19 return} {\cf17 false};\par
150 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b sistema.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b sistema.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Turma\par \pard\plain 
{\tc\tcl2 \v Turma}
{\xe \v Turma}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\f2 #include <turma.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Turma} (const std::string &codigoMateria, const std::string &codigoTurma, {\b Professor} *professor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b matricularAluno} ({\b Aluno} *aluno)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b excluirAluno} ({\b Aluno} *aluno)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getCodigoMateria} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getCodigoTurma} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Professor} * {\b getProfessor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< {\b Aluno} * > & {\b getAlunos} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b atingiuLimiteAlunos} () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Turma\:Turma}
{\xe \v Turma\:Turma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Turma::Turma (const std::string &  {\i codigoMateria}, const std::string &  {\i codigoTurma}, {\b Professor} *  {\i professor})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11     : codigoMateria(codigoMateria), professor(professor) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v atingiuLimiteAlunos\:Turma}
{\xe \v Turma\:atingiuLimiteAlunos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Turma::atingiuLimiteAlunos () const}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                       \{\par
26     {\cf19 return} alunos.size() >= limiteMaxAlunos;\par
27 \}\par
}
}
{\xe \v excluirAluno\:Turma}
{\xe \v Turma\:excluirAluno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Turma::excluirAluno ({\b Aluno} *  {\i aluno})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51                                      \{\par
52     {\cf20 // Remove o aluno da lista de matriculados}\par
53     {\cf17 auto} it = std::find(alunos.begin(), alunos.end(), aluno);\par
54     {\cf19 if} (it != alunos.end()) \{\par
55         alunos.erase(it);\par
56         std::cout << {\cf22 "Aluno removido com sucesso da turma "} << codigoMateria << {\cf22 "\\n"};\par
57     \} {\cf19 else} \{\par
58         std::cout << {\cf22 "Erro: Aluno nao encontrado nesta turma.\\n"};\par
59     \}\par
60 \}\par
}
}
{\xe \v getAlunos\:Turma}
{\xe \v Turma\:getAlunos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< {\b Aluno} * > & Turma::getAlunos () const}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                                 \{\par
22     {\cf19 return} alunos;\par
23 \}\par
}
}
{\xe \v getCodigoMateria\:Turma}
{\xe \v Turma\:getCodigoMateria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & Turma::getCodigoMateria () const}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                \{\par
14     {\cf19 return} codigoMateria;\par
15 \}\par
}
}
{\xe \v getCodigoTurma\:Turma}
{\xe \v Turma\:getCodigoTurma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & Turma::getCodigoTurma () const}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29                                              \{\par
30     {\cf19 return} codigoTurma;\par
31 \}\par
}
}
{\xe \v getProfessor\:Turma}
{\xe \v Turma\:getProfessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Professor} * Turma::getProfessor () const}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                      \{\par
18     {\cf19 return} professor;\par
19 \}\par
}
}
{\xe \v matricularAluno\:Turma}
{\xe \v Turma\:matricularAluno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Turma::matricularAluno ({\b Aluno} *  {\i aluno})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                                         \{\par
34     {\cf20 // Verifica se o aluno j\'E1 est\'E1 matriculado}\par
35     {\cf17 auto} it = std::find(alunos.begin(), alunos.end(), aluno);\par
36     {\cf19 if} (it == alunos.end()) \{\par
37         {\cf20 // Verifica se a turma atingiu o limite m\'E1ximo de alunos}\par
38         {\cf19 if} (limiteMinAlunos < alunos.size() < limiteMaxAlunos) \{\par
39             alunos.push_back(aluno);\par
40             std::cout << {\cf22 "Aluno matriculado com sucesso na turma "} << codigoMateria << {\cf22 "\\n"};\par
41             {\cf19 return} {\cf17 true};\par
42         \} {\cf19 else} \{\par
43             std::cout << {\cf22 "Erro: Limite de alunos atingido para a turma "} << codigoMateria << {\cf22 "\\n"};\par
44         \}\par
45     \} {\cf19 else} \{\par
46         std::cout << {\cf22 "Erro: Aluno ja matriculado nesta turma.\\n"};\par
47     \}\par
48     {\cf19 return} {\cf17 false};\par
49 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b turma.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Faculdade/PDS II/codespaces/codespaces/{\b turma.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/aluno.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/aluno.cpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/aluno.cpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "aluno.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/aluno.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/aluno.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/aluno.hpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Aluno}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
aluno.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/aluno.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/aluno.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef ALUNO_HPP}\par
2 {\cf21 #define ALUNO_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <iostream>}\par
6 {\cf21 #include <vector>}\par
7 \par
8 {\cf17 class }Aluno \{\par
9 {\cf17 public}:\par
10     {\cf20 // Construtor padr\'E3o de Aluno}\par
11     Aluno({\cf17 const} std::string& nome, {\cf17 const} std::string& sobrenome, {\cf17 const} std::string& email, {\cf18 int} idade, {\cf18 char} sexo);\par
12 \par
13     {\cf20 // Fun\'E7\'F5es relacionadas ao cadastro}\par
14     {\cf18 void} cadastrar({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
15 \par
16     {\cf20 // Fun\'E7\'F5es relacionadas \'E0 matr\'EDcula em disciplinas}\par
17     {\cf18 void} matricular({\cf17 const} std::string& codigoMateria, {\cf17 const} std::string& codigoTurma);\par
18 \par
19     {\cf20 // Fun\'E7\'E3o para acessar notas e frequ\'EAncias}\par
20     {\cf18 void} acessarNotasEFrequencias() {\cf17 const};\par
21 \par
22     {\cf20 // Getters}\par
23     std::string getNome() {\cf17 const};\par
24     std::string getSobrenome() {\cf17 const};\par
25     std::string getEmail() {\cf17 const};\par
26     {\cf18 int} getIdade() {\cf17 const};\par
27     {\cf18 char} getSexo() {\cf17 const};\par
28     std::string getLogin() {\cf17 const};\par
29     std::string getSenha() {\cf17 const};\par
30 \par
31         {\cf20 // Outros m\'E9todos necess\'E1rios}\par
32     {\cf18 void} criarLoginSenha({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
33     {\cf18 bool} realizarLogin({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
34     {\cf17 const} std::vector<std::string>& getTurmasMatriculadas() {\cf17 const};\par
35         \par
36         {\cf20 // Fun\'E7\'E3o para verificar o login e a senha}\par
37     {\cf18 bool} verificarCredenciais({\cf17 const} std::string& login, {\cf17 const} std::string& senha) {\cf17 const};\par
38 \par
39 {\cf17 private}:\par
40     std::string nome;\par
41     std::string sobrenome;\par
42     std::string email;\par
43     {\cf18 int} idade;\par
44     {\cf18 char} sexo;\par
45     std::string login;\par
46     std::string senha;\par
47     std::vector<std::string> turmasMatriculadas;\par
48 \};\par
49 \par
50 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/materia.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/materia.cpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/materia.cpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "materia.hpp"}\par
{\f2 #include "professor.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/materia.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/materia.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/materia.hpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "professor.hpp"}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Materia}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
materia.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/materia.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/materia.hpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef MATERIA_HPP}\par
2 {\cf21 #define MATERIA_HPP}\par
3 \par
4 {\cf21 #include "professor.hpp"}\par
5 {\cf21 #include <string>}\par
6 {\cf21 #include <vector>}\par
7 \par
8 {\cf17 class }Professor;\par
9 \par
10 {\cf17 class }Materia \{\par
11 {\cf17 public}:\par
12     {\cf20 // Construtor padr\'E3p de Materia}\par
13     Materia({\cf17 const} std::string& nome, {\cf17 const} std::string& codigoMateria, {\cf17 const} std::string& departamento);\par
14 \par
15     {\cf20 // Fun\'E7\'F5es relacionadas ao cadastro de professores}\par
16     {\cf18 void} cadastrarProfessor(Professor* professor);\par
17     {\cf18 void} excluirProfessor(Professor* professor);\par
18 \par
19     {\cf20 // Getters}\par
20     {\cf17 const} std::string& getNome() {\cf17 const};\par
21     {\cf17 const} std::string& getCodigoMateria() {\cf17 const};\par
22     {\cf17 const} std::string& getDepartamento() {\cf17 const};\par
23     {\cf17 const} std::vector<Professor*>& getProfessoresCadastrados() {\cf17 const};\par
24 \par
25 {\cf17 private}:\par
26     std::string nome;\par
27     std::string codigoMateria;\par
28     std::string departamento;\par
29     std::vector<Professor*> professoresCadastrados;\par
30 \};\par
31 \par
32 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/professor.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/professor.cpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/professor.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "professor.hpp"}\par
{\f2 #include "materia.hpp"}\par
{\f2 #include "sistema.hpp"}\par
{\f2 #include "turma.hpp"}\par
{\f2 #include "aluno.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/professor.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/professor.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/professor.hpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "turma.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Professor}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
professor.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/professor.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/professor.hpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef PROFESSOR_HPP}\par
2 {\cf21 #define PROFESSOR_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include "turma.hpp"}\par
7 \par
8 {\cf17 class }Professor \{\par
9 {\cf17 public}:\par
10     {\cf20 // Construtor padr\'E3o de Professor}\par
11     Professor({\cf17 const} std::string& nome, {\cf17 const} std::string& sobrenome, {\cf17 const} std::string& areaAtuacao, {\cf18 int} idade, {\cf18 char} sexo);\par
12 \par
13     {\cf20 // Fun\'E7\'F5es relacionadas ao cadastro}\par
14     {\cf18 void} cadastrar({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
15 \par
16     {\cf20 // Fun\'E7\'E3o para matricular como professor em uma mat\'E9ria}\par
17     {\cf18 void} matricular({\cf17 const} std::string& codigoMateria, {\cf17 const} std::string& codigoTurma);\par
18     {\cf18 bool} temTurmaAssociada({\cf17 const} std::string& codigoMateria) {\cf17 const};\par
19 \par
20 \par
21     {\cf20 // Fun\'E7\'E3o para registrar notas e frequ\'EAncias de alunos}\par
22     {\cf18 void} registrarNotasEFrequencias({\cf17 const} std::string& codigoTurma, {\cf17 const} std::vector<std::string>& alunos, {\cf17 const} std::vector<int>& notas, {\cf17 const} std::vector<int>& frequencias);\par
23 \par
24     {\cf20 // Fun\'E7\'E3o para acessar notas e frequ\'EAncias de uma turma}\par
25     {\cf18 void} acessarNotasEFrequencias({\cf17 const} std::string& codigoTurma) {\cf17 const};\par
26 \par
27     {\cf20 // Fun\'E7\'E3o para verificar o login e a senha}\par
28     {\cf18 bool} verificarCredenciais({\cf17 const} std::string& login, {\cf17 const} std::string& senha) {\cf17 const};\par
29 \par
30     {\cf20 // Getters}\par
31     std::string getNome() {\cf17 const};\par
32     std::string getSobrenome() {\cf17 const};\par
33     {\cf18 int} getIdade() {\cf17 const};\par
34     {\cf18 char} getSexo() {\cf17 const};\par
35     std::string getAreaAtuacao() {\cf17 const};\par
36     std::string getLogin() {\cf17 const};\par
37     std::string getSenha() {\cf17 const};\par
38     {\cf17 const} std::vector<std::string>& getTurmasAssociadas() {\cf17 const};\par
39 \par
40     {\cf20 // Outros m\'E9todos necess\'E1rios}\par
41     {\cf18 void} criarLoginSenha({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
42     {\cf18 bool} realizarLogin({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
43 \par
44 {\cf17 private}:\par
45     std::string nome;\par
46     std::string sobrenome;\par
47     std::string areaAtuacao;\par
48     {\cf18 int} idade;\par
49     {\cf18 char} sexo;\par
50     std::string login;\par
51     std::string senha;\par
52     std::string turmas;\par
53     std::vector<std::string> turmasMatriculadas;\par
54 \};\par
55 \par
56 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/sistema.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/sistema.cpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/sistema.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "sistema.hpp"}\par
{\f2 #include "aluno.hpp"}\par
{\f2 #include "professor.hpp"}\par
{\f2 #include "materia.hpp"}\par
{\f2 #include "turma.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/sistema.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/sistema.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/sistema.hpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "sistema.hpp"}\par
{\f2 #include "aluno.hpp"}\par
{\f2 #include "professor.hpp"}\par
{\f2 #include "materia.hpp"}\par
{\f2 #include "turma.hpp"}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Sistema}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sistema.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/sistema.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/sistema.hpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef SISTEMA_HPP}\par
2 {\cf21 #define SISTEMA_HPP}\par
3 \par
4 {\cf21 #include "sistema.hpp"}\par
5 {\cf21 #include "aluno.hpp"}\par
6 {\cf21 #include "professor.hpp"}\par
7 {\cf21 #include "materia.hpp"}\par
8 {\cf21 #include "turma.hpp"}\par
9 {\cf21 #include <string>}\par
10 {\cf21 #include <vector>}\par
11 \par
12 {\cf17 class }Aluno;\par
13 {\cf17 class }Professor;\par
14 {\cf17 class }Materia;\par
15 {\cf17 class }Turma;\par
16 \par
17 {\cf17 class }Sistema \{\par
18 {\cf17 public}:\par
19     {\cf20 // Fun\'E7\'F5es relacionadas ao login}\par
20     {\cf18 void} loginAluno({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
21     {\cf18 void} loginProfessor({\cf17 const} std::string& login, {\cf17 const} std::string& senha);\par
22 \par
23     {\cf20 // Fun\'E7\'F5es relacionadas \'E0 gest\'E3o de mat\'E9rias}\par
24     {\cf18 void} criarMateria({\cf17 const} std::string& nome, {\cf17 const} std::string& codigoMateria, {\cf17 const} std::string& departamento);\par
25     {\cf18 void} excluirMateria({\cf17 const} std::string& codigo);\par
26     {\cf18 void} listarMaterias() {\cf17 const};\par
27     {\cf17 const} std::vector<Materia*>& getMateriasCadastradas() {\cf17 const};\par
28 \par
29     {\cf20 // Fun\'E7\'F5es relacionadas \'E0 gest\'E3o de turmas}\par
30     {\cf18 void} criarTurma({\cf17 const} std::string& codigo, {\cf17 const} std::string& codigoTurma, Professor* professor);\par
31     {\cf18 void} excluirTurma({\cf17 const} std::string& codigoTurma);\par
32     {\cf18 void} listarTurmas() {\cf17 const};\par
33     {\cf17 const} std::vector<Turma*>& getTurmasCadastradas() {\cf17 const};\par
34 \par
35     {\cf20 // Fun\'E7\'F5es relacionadas ao acesso de alunos}\par
36     {\cf18 void} acessarNotasEFrequenciasAluno(Aluno* aluno) {\cf17 const};\par
37 \par
38 \par
39     {\cf20 // Fun\'E7\'F5es relacionadas ao acesso de professores}\par
40     {\cf18 void} acessarTurmasProfessor(Professor* professor) {\cf17 const};\par
41     {\cf18 void} acessarNotasETurmasProfessor(Professor* professor) {\cf17 const};\par
42 \par
43     {\cf20 // Fun\'E7\'E3o para verificar se um professor tem turmas cadastradas}\par
44     {\cf18 bool} professorTemTurmas(Professor* professor) {\cf17 const};\par
45 \par
46 {\cf17 private}:\par
47     std::vector<Aluno*> alunosCadastrados;\par
48     std::vector<Professor*> professoresCadastrados;\par
49     std::vector<Materia*> materiasCadastradas;\par
50     std::vector<Turma*> turmasCadastradas;\par
51 \};\par
52 \par
53 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/test.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/test.cpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/test.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "doctest.hpp"}\par
{\f2 #include "aluno.hpp"}\par
{\f2 #include "professor.hpp"}\par
{\f2 #include "materia.hpp"}\par
{\f2 #include "turma.hpp"}\par
{\f2 #include "sistema.hpp"}\par
{\f2 #include <sstream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Teste de cadastro de aluno")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Teste de matr\'EDcula em disciplinas")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Teste de cria\'E7\'E3o de mat\'E9ria")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Cadastro e Matr\'EDcula de {\b Professor} em uma Mat\'E9ria")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Registro de Notas e Frequ\'EAncias por um {\b Professor} e Acessar notas e frequ\'EAncias do aluno")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Acesso ao {\b Sistema} por um {\b Professor} com Login e Senha")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Acesso ao {\b Sistema} por um {\b Aluno} com Login e Senha")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Cria\'E7\'E3o e Exclus\'E3o de Mat\'E9ria e Cadastro de Professores")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Associa\'E7\'E3o de {\b Turma} a Mat\'E9ria")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Limite de Alunos por Turma")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_CASE} ("Limite de Turmas por Professor")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\:test.cpp}
{\xe \v test.cpp\:DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Acesso ao {\b Sistema} por um {\b Aluno} com Login e Senha" )}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                                                               \{\par
98     Sistema sistema;\par
99     Aluno aluno({\cf22 "Mariazinha"}, {\cf22 "Aparecida"}, {\cf22 "mraprc78@gmail.com"}, 20, {\cf23 'F'});\par
100 \par
101     aluno.cadastrar({\cf22 "mraaprc"}, {\cf22 "totalnoTP"});\par
102 \par
103      CHECK(aluno.verificarCredenciais({\cf22 "mraaprc"}, {\cf22 "totalnoTP"}));\par
104 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Acesso ao {\b Sistema} por um {\b Professor} com Login e Senha" )}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                                                   \{\par
89     Sistema sistema;\par
90     Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Computa\'E7\'E3o"}, 35, {\cf23 'M'});\par
91 \par
92     professor.cadastrar({\cf22 "jsilva"}, {\cf22 "totalnoTP"});\par
93 \par
94      CHECK(professor.verificarCredenciais({\cf22 "jsilva"}, {\cf22 "totalnoTP"}));\par
95 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Associa\'E7\'E3o de {\b Turma} a Mat\'E9ria" )}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 142                                               \{\par
143     Sistema sistema;\par
144     Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Matem\'E1tica"}, 35, {\cf23 'M'});\par
145     professor.cadastrar({\cf22 "jsilva"}, {\cf22 "senha1"});\par
146 \par
147     SUBCASE({\cf22 "Associa\'E7\'E3o B\'E1sica"}) \{\par
148         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
149         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T1"}, &professor);\par
150         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T2"}, &professor);\par
151         professor.matricular({\cf22 "MAT101"},{\cf22 "T1"});\par
152         professor.matricular({\cf22 "MAT101"},{\cf22 "T2"});\par
153 \par
154         CHECK_EQ(sistema.getTurmasCadastradas().size(), 2);\par
155         CHECK_EQ(sistema.getTurmasCadastradas()[0]->getCodigoTurma(), {\cf22 "T1"});\par
156         CHECK_EQ(sistema.getTurmasCadastradas()[1]->getCodigoTurma(), {\cf22 "T2"});\par
157     \}\par
158 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Cadastro e Matr\'EDcula de {\b Professor} em uma Mat\'E9ria" )}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                                 \{\par
53     Sistema sistema;\par
54     Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Computa\'E7\'E3o"}, 35, {\cf23 'M'});\par
55 \par
56     professor.cadastrar({\cf22 "login_professor"}, {\cf22 "senha_professor"});\par
57     professor.matricular({\cf22 "DCC02"},{\cf22 "TM1"});\par
58 \par
59     CHECK(professor.temTurmaAssociada({\cf22 "Codigo da Materia"}));\par
60 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Cria\'E7\'E3o e Exclus\'E3o de Mat\'E9ria e Cadastro de Professores" )}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 106                                                                          \{\par
107     Sistema sistema;\par
108 \par
109     SUBCASE({\cf22 "Cria\'E7\'E3o de Mat\'E9ria"}) \{\par
110         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
111 \par
112         CHECK_EQ(sistema.getMateriasCadastradas().size(), 1);\par
113         CHECK_EQ(sistema.getMateriasCadastradas()[0]->getNome(), {\cf22 "Matem\'E1tica"});\par
114         CHECK_EQ(sistema.getMateriasCadastradas()[0]->getCodigoMateria(), {\cf22 "MAT101"});\par
115     \}\par
116 \par
117     SUBCASE({\cf22 "Exclus\'E3o de Mat\'E9ria"}) \{\par
118         sistema.excluirMateria({\cf22 "MAT101"});\par
119 \par
120         CHECK_EQ(sistema.getMateriasCadastradas().size(), 0);\par
121     \}\par
122 \par
123     SUBCASE({\cf22 "Cadastro de Professores na Mat\'E9ria"}) \{\par
124         Professor professor1({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Matem\'E1tica"}, 35, {\cf23 'M'});\par
125         Professor professor2({\cf22 "Maria"}, {\cf22 "Santos"}, {\cf22 "Matem\'E1tica"}, 40, {\cf23 'F'});\par
126 \par
127         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
128 \par
129         professor1.cadastrar({\cf22 "jsilva"}, {\cf22 "senha1"});\par
130         professor2.cadastrar({\cf22 "msantos"}, {\cf22 "senha2"});\par
131 \par
132         professor1.matricular({\cf22 "MAT101"},{\cf22 "TM1"});\par
133         professor2.matricular({\cf22 "MAT101"},{\cf22 "TM1"});\par
134 \par
135         CHECK(professor1.getTurmasAssociadas().size() == 1);\par
136         CHECK(professor2.getTurmasAssociadas().size() == 1);\par
137         CHECK(professor1.getTurmasAssociadas()[0] == {\cf22 "MAT101"});\par
138         CHECK(professor2.getTurmasAssociadas()[0] == {\cf22 "MAT101"});\par
139     \}\par
140 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Limite de Alunos por Turma" )}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 160                                         \{\par
161     Sistema sistema;\par
162 \par
163     SUBCASE({\cf22 "Limite de Alunos m\'E1ximo Alcan\'E7ado - Nova Turma Criada"}) \{\par
164         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
165 \par
166         Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Matem\'E1tica"}, 35, {\cf23 'M'});\par
167         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T1"}, &professor);\par
168 \par
169         {\cf19 for} ({\cf18 int} i = 0; i < 49; ++i) \{\par
170             Aluno aluno({\cf22 "Aluno"}, std::to_string(i), {\cf22 "aluno@example.com"}, 20, {\cf23 'M'});\par
171             aluno.matricular({\cf22 "MAT101"},{\cf22 "T1"});\par
172         \}\par
173 \par
174         CHECK_EQ(sistema.getTurmasCadastradas().size(), 1);\par
175         CHECK_EQ(sistema.getTurmasCadastradas()[0]->getAlunos().size(), 1); \par
176     \}\par
177 \par
178     SUBCASE({\cf22 "Limite M\'EDnimo de Alunos N\'E3o Atingido - Nova Turma N\'E3o Criada"}) \{\par
179         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
180 \par
181         Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Matem\'E1tica"}, 35, {\cf23 'M'});\par
182         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T1"}, &professor);\par
183 \par
184         {\cf19 for} ({\cf18 int} i = 0; i < 5; ++i) \{\par
185             Aluno aluno({\cf22 "Aluno"}, std::to_string(i), {\cf22 "aluno@example.com"}, 20, {\cf23 'M'});\par
186             aluno.matricular({\cf22 "MAT101"}, {\cf22 "T1"});\par
187         \}\par
188 \par
189         CHECK_EQ(sistema.getTurmasCadastradas().size(), 1);\par
190         CHECK_EQ(sistema.getTurmasCadastradas()[0]->getAlunos().size(), 5);\par
191     \}\par
192 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Limite de Turmas por Professor" )}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                             \{\par
195     Sistema sistema;\par
196 \par
197     SUBCASE({\cf22 "Professor Pode Dar Aula para Duas Turmas"}) \{\par
198         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
199 \par
200         Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Matem\'E1tica"}, 35, {\cf23 'M'});\par
201         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T1"}, &professor);\par
202         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T2"}, &professor);\par
203 \par
204         CHECK_EQ(sistema.getTurmasCadastradas().size(), 2);\par
205     \}\par
206 \par
207     SUBCASE({\cf22 "Professor N\'E3o Pode Dar Aula para Mais de Duas Turmas"}) \{\par
208         sistema.criarMateria({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
209 \par
210         Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Matem\'E1tica"}, 35, {\cf23 'M'});\par
211         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T1"}, &professor);\par
212         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T2"}, &professor);\par
213         sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T3"}, &professor);  {\cf20 // Terceira turma n\'E3o \'E9 criada}\par
214 \par
215         CHECK_EQ(sistema.getTurmasCadastradas().size(), 3);\par
216     \}\par
217 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Registro de Notas e Frequ\'EAncias por um {\b Professor} e Acessar notas e frequ\'EAncias do aluno" )}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                                                                        \{\par
63     Sistema sistema;\par
64 \par
65     Professor professor({\cf22 "Jo\'E3o"}, {\cf22 "Silva"}, {\cf22 "Computa\'E7\'E3o"}, 35, {\cf23 'M'});\par
66     Aluno aluno({\cf22 "Mariazinha"}, {\cf22 "Aparecida"}, {\cf22 "mraprc78@gmail.com"}, 20, {\cf23 'F'});\par
67     Materia materia({\cf22 "PDS"}, {\cf22 "DCC02"}, {\cf22 "DCC"});\par
68     Turma turma({\cf22 "DCC02"}, {\cf22 "TM1"}, &professor);\par
69     aluno.cadastrar({\cf22 "login_aluno"}, {\cf22 "senha_aluno"});\par
70     aluno.matricular({\cf22 "DCC02"}, {\cf22 "TM1"});\par
71     professor.cadastrar({\cf22 "login_professor"}, {\cf22 "senha_professor"});\par
72     professor.matricular({\cf22 "DCC02"},{\cf22 "TM1"});\par
73 \par
74     professor.registrarNotasEFrequencias({\cf22 "TM1"}, \{{\cf22 "Maria Aparecida - "}\}, \{80\}, \{8\});\par
75 \par
76     std::ostringstream oss;\par
77     std::streambuf* oldCoutBuffer = std::cout.rdbuf(oss.rdbuf());\par
78 \par
79     aluno.acessarNotasEFrequencias();\par
80 \par
81     std::cout.rdbuf(oldCoutBuffer);\par
82 \par
83     std::string resultadoEsperado = {\cf22 "Notas e frequencias do aluno Mariazinha Aparecida:\\nMaria Aparecida - Notas e frequencias do aluno na mat\'E9ria TM1\\n80\\n8\\n"};\par
84 \par
85     CHECK_EQ(oss.str(), resultadoEsperado);\par
86 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Teste de cadastro de aluno" )}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                                         \{\par
11     Aluno aluno({\cf22 "John"}, {\cf22 "Doe"}, {\cf22 "john.doe@example.com"}, 20, {\cf23 'M'});\par
12     aluno.cadastrar({\cf22 "john_doe"}, {\cf22 "password"});\par
13 \par
14     CHECK(aluno.getLogin() == {\cf22 "john_doe"});\par
15     CHECK(aluno.getSenha() == {\cf22 "password"});\par
16 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Teste de cria\'E7\'E3o de mat\'E9ria" )}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 43                                             \{\par
44     Sistema sistema;\par
45     sistema.criarMateria({\cf22 "F\'EDsica"}, {\cf22 "FIS101"}, {\cf22 "Departamento de F\'EDsica"});\par
46 \par
47     CHECK_EQ(sistema.getMateriasCadastradas().size(), 1);\par
48     CHECK_EQ(sistema.getMateriasCadastradas()[0]->getNome(), {\cf22 "F\'EDsica"});\par
49     CHECK_EQ(sistema.getMateriasCadastradas()[0]->getCodigoMateria(), {\cf22 "FIS101"});\par
50 \}\par
}
}
{\xe \v TEST_CASE\:test.cpp}
{\xe \v test.cpp\:TEST_CASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_CASE ("Teste de matr\'EDcula em disciplinas" )}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                 \{\par
19     Aluno aluno({\cf22 "John"}, {\cf22 "Doe"}, {\cf22 "john.doe@example.com"}, 20, {\cf23 'M'});\par
20     aluno.cadastrar({\cf22 "john_doe"}, {\cf22 "password"});\par
21 \par
22     Materia materia({\cf22 "Matem\'E1tica"}, {\cf22 "MAT101"}, {\cf22 "Departamento de Matem\'E1tica"});\par
23     Professor professor({\cf22 "Jane"}, {\cf22 "Smith"}, {\cf22 "Matem\'E1tica"}, 30, {\cf23 'F'});\par
24     materia.cadastrarProfessor(&professor);\par
25 \par
26     Sistema sistema;\par
27     sistema.criarTurma({\cf22 "MAT101"}, {\cf22 "T1"}, &professor);\par
28 \par
29     SUBCASE({\cf22 "Matricular aluno com sucesso"}) \{\par
30         aluno.matricular({\cf22 "MAT101"},{\cf22 "T1"});\par
31         CHECK_EQ(aluno.getTurmasMatriculadas().size(), 1);\par
32     \}\par
33 \par
34     SUBCASE({\cf22 "Matricular aluno ultrapassando o limite"}) \{\par
35         {\cf19 for} ({\cf18 int} i = 0; i < 6; ++i) \{\par
36             aluno.matricular({\cf22 "MAT101"},{\cf22 "T1"});\par
37         \}\par
38 \par
39         CHECK_EQ(aluno.getTurmasMatriculadas().size(), 5);  {\cf20 // O limite \'E9 5}\par
40     \}\par
41 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/turma.cpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/turma.cpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/turma.cpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "turma.hpp"}\par
{\f2 #include "aluno.hpp"}\par
{\f2 #include "professor.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Faculdade/PDS II/codespaces/codespaces/turma.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/turma.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/turma.hpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "aluno.hpp"}\par
{\f2 #include "professor.hpp"}\par
{\f2 #include "materia.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Turma}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
turma.hpp\par \pard\plain 
{\tc\tcl2 \v Faculdade/PDS II/codespaces/codespaces/turma.hpp}
{\xe \v Faculdade/PDS II/codespaces/codespaces/turma.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TURMA_HPP}\par
2 {\cf21 #define TURMA_HPP}\par
3 \par
4 {\cf21 #include <string>}\par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include "aluno.hpp"}\par
7 {\cf21 #include "professor.hpp"}\par
8 {\cf21 #include "materia.hpp"}\par
9 \par
10 {\cf17 class }Aluno;\par
11 {\cf17 class }Professor;\par
12 \par
13 {\cf17 class }Turma \{\par
14 {\cf17 public}:\par
15     {\cf20 // Construtor padr\'E3o de Turma}\par
16     Turma({\cf17 const} std::string& codigoMateria, {\cf17 const} std::string& codigoTurma, Professor* professor);\par
17 \par
18     {\cf20 // Fun\'E7\'F5es relacionadas \'E0 matr\'EDcula de alunos}\par
19     {\cf18 bool} matricularAluno(Aluno* aluno);\par
20     {\cf18 void} excluirAluno(Aluno* aluno);\par
21 \par
22     {\cf20 // Getters}\par
23     {\cf17 const} std::string& getCodigoMateria() {\cf17 const};\par
24     {\cf17 const} std::string& getCodigoTurma() {\cf17 const};\par
25     Professor* getProfessor() {\cf17 const};\par
26     {\cf17 const} std::vector<Aluno*>& getAlunos() {\cf17 const};\par
27 \par
28     {\cf20 // Verifica se a turma atingiu o limite de alunos}\par
29     {\cf18 bool} atingiuLimiteAlunos() {\cf17 const};\par
30 \par
31 {\cf17 private}:\par
32     std::string codigoMateria;\par
33     std::string codigoTurma;\par
34     Professor* professor;\par
35     std::vector<Aluno*> alunos;\par
36     {\cf17 static} {\cf17 const} {\cf18 int} limiteMinAlunos = 10;\par
37     {\cf17 static} {\cf17 const} {\cf18 int} limiteMaxAlunos = 50;\par
38 \};\par
39 \par
40 {\cf21 #endif}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
